# Generated by Django 4.2.4 on 2023-09-04 05:42

import accounts.models
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('school', '0001_initial'),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('image', models.FileField(upload_to=accounts.models.UserProfile.user_avatar_path, verbose_name='Avatar uchun surat:')),
                ('middle_name', models.CharField(max_length=255, verbose_name='Otasini ismi:')),
                ('type_user', models.CharField(blank=True, max_length=255, null=True, verbose_name='User turi:')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name_plural': 'Foydalanuvchilar',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Permission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='nomi:')),
                ('slug', models.SlugField(blank=True, editable=False, null=True)),
            ],
            options={
                'verbose_name_plural': 'Adminlarga ruxsatnomalar',
            },
        ),
        migrations.CreateModel(
            name='Type_of_Admin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='nomi:')),
                ('slug', models.SlugField(blank=True, editable=False, null=True)),
            ],
            options={
                'verbose_name_plural': 'Adminlar toifasi',
            },
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_card', models.CharField(blank=True, max_length=50, null=True, verbose_name='Pasport seriya raqami:')),
                ('salary_type', models.CharField(choices=[('FIXED', 'fixed'), ('PER_HOURS', 'soatbay')], max_length=255, verbose_name='Oylik turi(Fixed yoki Soatbay):')),
                ('salary', models.IntegerField(default=0, verbose_name='Oylik maosh:')),
                ('date_of_employment', models.DateField(blank=True, null=True, verbose_name='Ishga kirgan sanasi:')),
                ('gender', models.CharField(choices=[('MALE', 'Erkak'), ('FEMALE', 'Ayol')], max_length=255, verbose_name='Jinsi:')),
                ('address', models.CharField(blank=True, max_length=400, null=True, verbose_name='Manzili:')),
                ('description', models.TextField(blank=True, null=True, verbose_name="Qo'shimcha ma'lumot:")),
                ('experience', models.CharField(blank=True, choices=[('HIGH_CATEGORY', 'Oliy toifa'), ('FIRST_CATEGORY', '1-toifa'), ('SECOND_CATEGORY', '2-toifa')], max_length=255, null=True, verbose_name='Tajriba:')),
                ('experience_desc', models.CharField(blank=True, max_length=255, null=True, verbose_name='tajriba haqida:')),
                ('language_certificate', models.CharField(blank=True, choices=[('TESOL', 'Tesol'), ('CELTA', 'Celta'), ('IELTS6', 'IELTS 6+'), ('CEFRB2', 'CEFR B2+')], max_length=255, null=True, verbose_name='Til sertifikati:')),
                ('language_certificate_file', models.FileField(blank=True, null=True, upload_to=accounts.models.Teacher.teacher_language_certificate_path, verbose_name='Til sertifikati fayl shakli:')),
                ('lens', models.FileField(blank=True, null=True, upload_to=accounts.models.Teacher.teacher_lens_path, verbose_name='Obyektivka:')),
                ('id_card_photo', models.FileField(blank=True, null=True, upload_to=accounts.models.Teacher.teacher_id_card_photo_path, verbose_name='Pasport nusxasi:')),
                ('survey', models.FileField(blank=True, null=True, upload_to=accounts.models.Teacher.teacher_survey_path, verbose_name="So'rovnoma:")),
                ('biography', models.FileField(blank=True, null=True, upload_to=accounts.models.Teacher.teacher_biography_path, verbose_name='Tarjimai xol:')),
                ('medical_book', models.FileField(blank=True, null=True, upload_to=accounts.models.Teacher.teacher_medical_book_path, verbose_name='Tibbiy Daftarcha (086):')),
                ('picture_3x4', models.FileField(blank=True, null=True, upload_to=accounts.models.Teacher.teacher_picture_3x4_path, verbose_name='3x4 rasm:')),
                ('sciences', models.ManyToManyField(blank=True, related_name='teachers', to='school.science', verbose_name='Fanlar:')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='teacher', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': "O'qituvchilar",
            },
        ),
        migrations.CreateModel(
            name='Admin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('salary', models.IntegerField(default=0, verbose_name='Oylik maosh:')),
                ('permissions', models.ManyToManyField(blank=True, related_name='admins', to='accounts.permission', verbose_name='Ruxsatnomalar:')),
                ('types', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='admins', to='accounts.type_of_admin', verbose_name='Admin turi:')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='admin', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Adminlar',
            },
        ),
    ]
